# -*- coding: utf-8 -*-
"""
ExtratorNucvest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pz1VsUDMMS3XlUR-xX9xjp6-iBDBQJrU
"""

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from time import sleep
import pandas as pd

class ExtratorNucvest:
    def __init__(self, driver=None):
        options = webdriver.ChromeOptions()
        options.add_argument("--headless")
        self.driver = webdriver.Chrome(chrome_options=options) if not driver else driver
        self.url = "https://www.nucvest.com.br/"
        self.driver.get(self.url)
        self.elem_pag = 20
        self.inscricao = []
    
    def aceitarcookies(self):
        btn_cookie = self.driver.find_element_by_class_name("""fundasp-lgpd-button-accept""")
        btn_cookie.click()
    
    def cronograma(self):
        btn = self.driver.find_element_by_class_name("""calendar""")
        btn.click()
        
    def extrair_info_páginas(self):
        informacoes = []
        for i in range(1, self.elem_pag+1):
            data = self.driver.find_element_by_xpath(f"""//*[@id="collapseTwo"]/div/ul/li[{i}]/div[1]""")
            data = data.text
            try:
                conteudo = self.driver.find_element_by_xpath(f"""//*[@id="collapseTwo"]/div/ul/li[{i}]/div[2]""")
                conteudo = conteudo.text
            except:
                conteudo = ''
            dados = {'Data':data,
                    'Conteudo':conteudo}
            informacoes.append(dados)
        self.inscricao = informacoes

    def formatar_dados(self):
        for linha in self.inscricao:
            if 'Período de Inscrições' in str(linha['Conteudo']):
                data = str( linha['Data']).split('a')
                print(data[0])
                self.inicio_das_insc = data[0]
                self.termino_das_insc = data[1]
            elif 'Aplicação da prova' in str(linha['Conteudo']):
                self.primeira_fase = str(linha['Data']).split('a')

    def extrair_informacoes(self):
        self.aceitarcookies()
        self.cronograma()
        self.extrair_info_páginas()
        self.formatar_dados()

